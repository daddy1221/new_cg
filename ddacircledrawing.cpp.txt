#include <iostream>
#include <graphics.h>
#include <math.h>
#include <conio.h>
using namespace std;

int main() {
    int gdriver = DETECT, gmode, errorcode, tmp, i = 1, rds;
    float st_x, st_y, x1, x2, y1, y2, ep;

    // Initialize graphics mode
    initgraph(&gdriver, &gmode, "C:\\TURBOC3\\BGI");

    // Get the radius from the user
    cout << "Enter Radius: ";
    cin >> rds;

    // Calculate the required precision (ep) for drawing the points
    while (rds > pow(2, i)) {
        i++;
    }
    ep = 1 / pow(2, i);

    // Initial points
    x1 = rds;
    y1 = 0;
    st_x = rds;
    st_y = 0;

    // Draw the fractal curve
    do {
        x2 = x1 + (y1 * ep);
        y2 = y1 - (x2 * ep);
        putpixel(x2 + 200, y2 + 200, 10);  // Draw the pixel (shifted to center)
        
        // Update the coordinates for the next iteration
        x1 = x2;
        y1 = y2;
    } while ((y1 - st_y) < ep || (st_x - x1) > ep);  // Condition to terminate

    // Wait for the user to press a key
    getch();
    
    // Close the graphics mode
    closegraph();
    
    return 0;
}
